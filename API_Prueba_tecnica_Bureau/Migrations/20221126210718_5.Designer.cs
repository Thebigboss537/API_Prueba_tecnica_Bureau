// <auto-generated />
using System;
using API_Prueba_tecnica_Bureau.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIPruebatecnicaBureau.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221126210718_5")]
    partial class _5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Categoria", b =>
                {
                    b.Property<int>("Id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_categoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Director", b =>
                {
                    b.Property<int>("Id_director")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_director"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_director");

                    b.ToTable("Directores");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Idioma", b =>
                {
                    b.Property<int>("Id_idioma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_idioma"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_idioma");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Pelicula", b =>
                {
                    b.Property<int>("Id_pelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_pelicula"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fechadeestreno")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("Id_director")
                        .HasColumnType("int");

                    b.Property<int>("Id_idioma")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_pelicula");

                    b.HasIndex("Id_categoria");

                    b.HasIndex("Id_director");

                    b.HasIndex("Id_idioma");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Rol", b =>
                {
                    b.Property<int>("Id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Usuario", b =>
                {
                    b.Property<int>("Id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_usuario"));

                    b.Property<string>("Correo_electronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_usuario_autenticacion")
                        .HasColumnType("int");

                    b.HasKey("Id_usuario");

                    b.HasIndex("Id_usuario_autenticacion");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Usuario_autenticacion", b =>
                {
                    b.Property<int>("Id_usuario_autenticacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_usuario_autenticacion"));

                    b.Property<int>("Id_rol")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_usuario_autenticacion");

                    b.HasIndex("Id_rol");

                    b.ToTable("Usuarios_autenticacion");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Pelicula", b =>
                {
                    b.HasOne("API_Prueba_tecnica_Bureau.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Prueba_tecnica_Bureau.Models.Director", "Director")
                        .WithMany()
                        .HasForeignKey("Id_director")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Prueba_tecnica_Bureau.Models.Idioma", "Idioma")
                        .WithMany()
                        .HasForeignKey("Id_idioma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Director");

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Usuario", b =>
                {
                    b.HasOne("API_Prueba_tecnica_Bureau.Models.Usuario_autenticacion", "Usuario_autenticacion")
                        .WithMany()
                        .HasForeignKey("Id_usuario_autenticacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario_autenticacion");
                });

            modelBuilder.Entity("API_Prueba_tecnica_Bureau.Models.Usuario_autenticacion", b =>
                {
                    b.HasOne("API_Prueba_tecnica_Bureau.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
